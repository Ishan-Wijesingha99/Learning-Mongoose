
// usually we create a seperate js file for each schema and we just export it

const mongoose = require('mongoose');
const { stringify } = require('querystring');

// this is how you create a new Schema, you use the Schema constructor function
// it takes an object, this object has key-value pairs for the properties you want each document entree to have
const userSchema = new mongoose.Schema({
    firstName: String,
    age: Number,
    email: String,
    // dates can be used in schema
    createdAt: Date,
    updatedAt: Date,
    // In order to identify who a person's best friend is, we will use that best friend's objectId that is automatically generated by mongoDB
    // this objectId is itself a different data type
    bestFriend: mongoose.SchemaTypes.ObjectId,
    // to define an array, we just use [], if we left it blank, we are specifying that it could be an array of any and all datatypes, because we specified it is a String, the elements can only be strings
    hobbies: [String],
    // we can also nest document properties, so here we have an address object, that has two strings as properties
    address: {
        street: String,
        city: String
    }
})

// then we need to create the model FOR THIS schema
// first argument is the name of the model, this is the name that will show up in the actual mongoDB database, and the second argument is the relevant schema
const User = mongoose.model("User", userSchema)

// export it
module.exports = User;